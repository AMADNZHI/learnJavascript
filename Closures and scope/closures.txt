При выполнении какой-либо функции интерпретатор создает внутренний объект переменных для этой функции. В этот внутренний объект переменных или как его иногда называют лексическое окружение входят аргументы функции, локальные переменные этой функции, те функции, которые созданы внутри этой функции.
Также есть глобальный объект переменных, туда входят глобальные переменные, функции созданные в глобальной области видимости. По сути этот глобальный обьект является лексическим окружением.
При Создании функция получается скрытое свойство [[Scope]],  которое ссылается на лексическое окружение и область видимости, в котором она была Создана. При выполнении этой функции, она создает свой внутренний объект переменных, но этот объект также получается ссылку на внешний объект переменных из свойства [[Scope]] функции. Например создана глобальная переменная и функция. Допустим в коде этой функции мы выводим в консоль значение этой глобальной переменной. Интерпретатор при выполнении кода этой функции пытается сначала найти эту переменную во внутреннем объекте переменных, но там он ее не находит. Далее он обращается к ссылке на внешний объект переменных и тут он уже ее находит. Также что касается очищения памяти. Обычно после выполнения функции внутренний объект переменных удаляется из памяти, но если какая-та функция имеет ссылку на этот объект переменных, то он не удается из памяти